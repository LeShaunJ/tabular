crystal_doc_search_index_callback({"repository_name":"tabular","body":"# Tabular\n\nProvide [`go-cobra`]-style tab-completions for your Crystal CLI. While it is opinionated in\nit's adherence to the [`go-cobra`] convention, it is unopionionated in how you get there.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     tabular:\n       github: leshaunj/tabular\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nEnsure `Tabular` is imported into your project.\n\n```crystal\nrequire \"tabular\"\n```\n\n### Tokens\n\nA `Tabular::Token` represents any possible suggestion the end-user will receive, given their current argument.\n`Tabular` comes with three _built-in_ `Tabular::Token` styles:\n\n```crystal\nrequire \"tabular\"\n\nmy_tokens = Tabular.tokens(\n  Tabular.option(\"--opt\", [\"-o\"], \"A simple boolean flag\"),\n\n  Tabular.option(\"--arg-opt\", [\"-a\"],\n                 \"A flag that expects any argument\",\n                 Tabular.argument(description: \"Will suggest available files\")),\n\n  Tabular.option(\"--spec-arg\", [\"-s\"],\n                 description: \"A flag that expects a choice of arguments\",\n                 Tabular.argument(\"choice1\"),\n                 Tabular.argument(\"choice2\"),\n                 Tabular.argument(\"choice3\")),\n\n  Tabular.option(\"--file-opt\", [\"-f\"],\n                 \"A flag that expects a certain file type\",\n                 Tabular.argument(\"yaml\", [\"yml\"], directives: :filter_ext)),\n\n  Tabular.option(\"--dir-opt\", [\"-d\"],\n                 \"A flag that expects any directory\",\n                 Tabular.argument(directives: :filter_dir)),\n\n  Tabular.option(\"--dir-opt\", [\"-D\"],\n                 \"A flag that expects any directory within a specific directory\",\n                 Tabular.argument(\"path/to/dir\", directives: :filter_dir)),\n\n  Tabular.command(\"action1\", [\"act1\"], \"A subcommand\"),\n  Tabular.command(\"action2\", [\"act2\"], \"Another subcommand\"),\n)\n```\n\n> [!tip]\n> You can also create you own bespoke `tokens` with the base `Tabular.Token` class.\n\n### Reply\n\nOnce you have your `Tabular::Tokens`, invoke `Tabular.reply` when the `__complete` subcommand is called on your\nCLI. It will determine the suggestions and print them to `STDOUT`:\n\n```crystal\nrequire \"tabular\"\n\nif ARGV[0]? == \"__complete\"\n  ARGV.shift\n\n  # Read arguments from `ARGV` or supply your own\n  Tabular.reply my_tokens # , [\"-a\", \"--bee\", \"cee\", \"dee\"]\nend\n```\n\nIf you provide a `block` to `Tabular.reply`, said `block` is called when a `Tabular.command` is matched,\nhanding control back to your CLI:\n\n```crystal\nrequire \"tabular\"\n\nif ARGV[0]? == \"__complete\"\n  ARGV.shift\n\n  Tabular.reply my_tokens do |current|\n    case current.name\n    when \"subcmd1\" then Subcommand1.new.complete ARGV\n    when \"subcmd2\" then Subcommand2.new.complete ARGV\n    end\n  end\nend\n```\n\nAny unhandled `Tabular.command` tokens will fallback to default completion behaviour for the given shell. \n\n> [!warning]\n> When providing both a `block` and your own argument list, ensure your argument list is passed as a\n> **variable**. `Tabular.reply` will modify this variable as needed so you can forward it to nested\n> commands.\n\n### Installer\n\nCall `Tabular.install!` when the `completion` (_or what you choose_) subcommand is called on your CLI:\n\n```crystal\nrequire \"tabular\"\n\nif ARGV[0]? == \"completion\"\n  ARGV.shift\n\n  begin\n    # Read arguments from `ARGV` or supply your own\n    Tabular.install! # [\"bash\"]\n  rescue e : Tabular::Error\n    puts e\n    exit 1\n  end\nend\n```\n\n## Development\n\n> [!note] See\n> [Contributing documentation](https://github.com/leshaunj/tabular/CONTRIBUTING.md)\n\n[`go-cobra`]: https://github.com/spf13/cobra\n","program":{"html_id":"tabular/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"tabular","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"tabular/Tabular","path":"Tabular.html","kind":"module","full_name":"Tabular(T)","name":"Tabular","abstract":false,"locations":[{"filename":"src/tabular.cr","line_number":4,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L4"},{"filename":"src/tabular/completers.cr","line_number":1,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/completers.cr#L1"},{"filename":"src/tabular/enums.cr","line_number":1,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L1"},{"filename":"src/tabular/exceptions.cr","line_number":1,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L1"},{"filename":"src/tabular/installer.cr","line_number":5,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/installer.cr#L5"},{"filename":"src/tabular/log.cr","line_number":3,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L3"},{"filename":"src/tabular/token.cr","line_number":1,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L1"},{"filename":"src/tabular/version.cr","line_number":1,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/version.cr#L1"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"doc":"The `Tabular` library.","summary":"<p>The <code><a href=\"Tabular.html\">Tabular</a></code> library.</p>","class_methods":[{"html_id":"argument(*,choices=[]ofString,description=\"\",directives:Directable|Nil=nil)-class-method","name":"argument","doc":"Create a `Token` as a `Kind::Argument`.\n- *choices*: A set of possible values for the argument.\n- *description*: See `Token#description`.\n- *directives*: See `Token#directives`.","summary":"<p>Create a <code><a href=\"Tabular/Token.html\">Token</a></code> as a <code><a href=\"Tabular/Kind.html#Argument\">Kind::Argument</a></code>.</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"choices","default_value":"[] of String","external_name":"choices","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""},{"name":"directives","default_value":"nil","external_name":"directives","restriction":"Directable | ::Nil"}],"args_string":"(*, choices = [] of String, description = \"\", directives : Directable | Nil = nil)","args_html":"(*, choices = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, description = <span class=\"s\">&quot;&quot;</span>, directives : Directable | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/tabular.cr","line_number":20,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L20"},"def":{"name":"argument","args":[{"name":"","external_name":"","restriction":""},{"name":"choices","default_value":"[] of String","external_name":"choices","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""},{"name":"directives","default_value":"nil","external_name":"directives","restriction":"Directable | ::Nil"}],"splat_index":0,"visibility":"Public","body":"Token.new(:argument, name, choices, description, directives: directives)"},"external_var":false},{"html_id":"command(name:String,aliases=[]ofString,description=\"\")-class-method","name":"command","doc":"Create a `Token` as a `Kind::Command`.\n- *name*: See `Token#name`.\n- *aliases*: See `Token#aliases`.\n- *description*: See `Token#description`.","summary":"<p>Create a <code><a href=\"Tabular/Token.html\">Token</a></code> as a <code><a href=\"Tabular/Kind.html#Command\">Kind::Command</a></code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"aliases","default_value":"[] of String","external_name":"aliases","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""}],"args_string":"(name : String, aliases = [] of String, description = \"\")","args_html":"(name : String, aliases = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, description = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/tabular.cr","line_number":28,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L28"},"def":{"name":"command","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"aliases","default_value":"[] of String","external_name":"aliases","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""}],"visibility":"Public","body":"Token.new(:command, name, aliases, description)"},"external_var":false},{"html_id":"completion_cmd:String-class-method","name":"completion_cmd","doc":"Return the name of the CLI argument that will prompt completions.","summary":"<p>Return the name of the CLI argument that will prompt completions.</p>","abstract":false,"location":{"filename":"src/tabular/installer.cr","line_number":14,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/installer.cr#L14"},"def":{"name":"completion_cmd","return_type":"String","visibility":"Public","body":"@@completion_cmd || (@@completion_cmd = \"__complete\")"},"external_var":false},{"html_id":"completion_cmd=(value:String)-class-method","name":"completion_cmd=","doc":"Set the name of the CLI argument that will prompt completions.","summary":"<p>Set the name of the CLI argument that will prompt completions.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","location":{"filename":"src/tabular/installer.cr","line_number":19,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/installer.cr#L19"},"def":{"name":"completion_cmd=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@completion_cmd = value"},"external_var":false},{"html_id":"delimiters:String-class-method","name":"delimiters","doc":"A global string of characters that may delimit a `Token` of `Kind::Option`","summary":"<p>A global string of characters that may delimit a <code><a href=\"Tabular/Token.html\">Token</a></code> of <code><a href=\"Tabular/Kind.html#Option\">Kind::Option</a></code></p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":3,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L3"},"def":{"name":"delimiters","return_type":"String","visibility":"Public","body":"@@delimiters || (@@delimiters = \"\")"},"external_var":false},{"html_id":"delimiters=(value:String)-class-method","name":"delimiters=","doc":"Specify the global string of characters that may delimit a `Token` of `Kind::Option`\n\n```\n# Allows for something like `--option=`\nTabular.delimiters = \"=\"\n# Allows for something like `-option:`\nTabular.delimiters = \":\"\n# Allows for all of the above\nTabular.delimiters = \":=\"\n```","summary":"<p>Specify the global string of characters that may delimit a <code><a href=\"Tabular/Token.html\">Token</a></code> of <code><a href=\"Tabular/Kind.html#Option\">Kind::Option</a></code></p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : String)","location":{"filename":"src/tabular/token.cr","line_number":17,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L17"},"def":{"name":"delimiters=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@delimiters = value"},"external_var":false},{"html_id":"find(tokens:Tokens,arg:String)-class-method","name":"find","doc":"Return the first `Token` in *tokens* that starts with *args*.","summary":"<p>Return the first <code><a href=\"Tabular/Token.html\">Token</a></code> in <em>tokens</em> that starts with <em>args</em>.</p>","abstract":false,"args":[{"name":"tokens","external_name":"tokens","restriction":"Tokens"},{"name":"arg","external_name":"arg","restriction":"String"}],"args_string":"(tokens : Tokens, arg : String)","args_html":"(tokens : <a href=\"Tabular/Tokens.html\">Tokens</a>, arg : String)","location":{"filename":"src/tabular.cr","line_number":43,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L43"},"def":{"name":"find","args":[{"name":"tokens","external_name":"tokens","restriction":"Tokens"},{"name":"arg","external_name":"arg","restriction":"String"}],"visibility":"Public","body":"result = tokens.find do |t| t.match?(arg) end\n\nresult.nil? ? Token::NONE : result\n"},"external_var":false},{"html_id":"install!(args=ARGV,*,program:String=PROGRAM_NAME,command=Tabular.completion_cmd)-class-method","name":"install!","doc":"Sends a completion script for shell specified in *args*.\n- *args*: A list of user-specified arguments for the installer.\n  - `<shell>`: The shell to install the completions for (_supports: `bash`, `fish`, `zsh`_).\n  - `--development <path>`: An alternate path to alias the CLI name to.\n- *program*: The name of the CLI program. Best not to set this one.\n- *command*: The subcommand the completion script will call to get completions.","summary":"<p>Sends a completion script for shell specified in <em>args</em>.</p>","abstract":false,"args":[{"name":"args","default_value":"ARGV","external_name":"args","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"program","default_value":"PROGRAM_NAME","external_name":"program","restriction":"String"},{"name":"command","default_value":"Tabular.completion_cmd","external_name":"command","restriction":""}],"args_string":"(args = ARGV, *, program : String = PROGRAM_NAME, command = Tabular.completion_cmd)","args_html":"(args = <span class=\"t\">ARGV</span>, *, program : String = <span class=\"t\">PROGRAM_NAME</span>, command = <span class=\"t\">Tabular</span>.completion_cmd)","location":{"filename":"src/tabular/installer.cr","line_number":29,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/installer.cr#L29"},"def":{"name":"install!","args":[{"name":"args","default_value":"ARGV","external_name":"args","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"program","default_value":"PROGRAM_NAME","external_name":"program","restriction":"String"},{"name":"command","default_value":"Tabular.completion_cmd","external_name":"command","restriction":""}],"splat_index":1,"visibility":"Public","body":"program = (Path.new(program)).basename\nvar_name = program.gsub(/[:-]/, \"_\")\nshell = (Path.new((`ps -p \\\"#{Process.ppid}\\\" -o comm=`).chomp)).basename\nalternate = \"\"\n\nwhile !args.empty?\n  arg = args.shift\n\n  case arg\n  when \"--development\"\n    if args.empty?\n      raise(Error::Argument.new(\"Must specify an alternate program <path>.\"))\n    end\n    alternate = args.shift\n  else\n    shell = arg\n  end\nend\n\nif shell.empty?\n  raise(Error::Argument.new(\"Could not determine your shell. Please specify: {bash|fish|zsh}.\"))\nend\n\ncase shell\nwhen \"bash\"\n  STDOUT.puts(ECR.render(INSTALLER_PATH + \"/bash.ecr\"))\nwhen \"fish\"\n  STDOUT.puts(ECR.render(INSTALLER_PATH + \"/fish.ecr\"))\nwhen \"zsh\"\n  STDOUT.puts(ECR.render(INSTALLER_PATH + \"/zsh.ecr\"))\nelse\n  raise(Error::Support.new(\"Tab completions not supported for '#{shell}' (yet...?)\"))\nend\n"},"external_var":false},{"html_id":"option(name:String,aliases=[]ofString,description=\"\",*argument,directives:Directable|Nil=nil,delimiters=Tabular.delimiters)-class-method","name":"option","doc":"Create a `Token` as a `Kind::Option`.\n- *name*: See `Token#name`.\n- *aliases*: See `Token#aliases`.\n- *description*: See `Token#description`.\n- *argument*: See `Token#arguments`.\n- *directives*: See `Token#directives`.\n- *delimiters*: Ad hoc delimiters that will override `Tabular.delimiters`.","summary":"<p>Create a <code><a href=\"Tabular/Token.html\">Token</a></code> as a <code><a href=\"Tabular/Kind.html#Option\">Kind::Option</a></code>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"aliases","default_value":"[] of String","external_name":"aliases","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""},{"name":"argument","external_name":"argument","restriction":""},{"name":"directives","default_value":"nil","external_name":"directives","restriction":"Directable | ::Nil"},{"name":"delimiters","default_value":"Tabular.delimiters","external_name":"delimiters","restriction":""}],"args_string":"(name : String, aliases = [] of String, description = \"\", *argument, directives : Directable | Nil = nil, delimiters = Tabular.delimiters)","args_html":"(name : String, aliases = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, description = <span class=\"s\">&quot;&quot;</span>, *argument, directives : Directable | Nil = <span class=\"n\">nil</span>, delimiters = <span class=\"t\">Tabular</span>.delimiters)","location":{"filename":"src/tabular.cr","line_number":12,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L12"},"def":{"name":"option","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"aliases","default_value":"[] of String","external_name":"aliases","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""},{"name":"argument","external_name":"argument","restriction":""},{"name":"directives","default_value":"nil","external_name":"directives","restriction":"Directable | ::Nil"},{"name":"delimiters","default_value":"Tabular.delimiters","external_name":"delimiters","restriction":""}],"splat_index":3,"visibility":"Public","body":"Token.new(:option, name, aliases, description, *argument, directives: directives, delimiters: delimiters)"},"external_var":false},{"html_id":"reply(tokens:Tokens,args=ARGV):Bool-class-method","name":"reply","doc":"Verify the arguments in *args[0,-1]* and send suggestions to `STDOUT` for any `Token` in *tokens*\nthat starts with *args[-1]*.","summary":"<p>Verify the arguments in <em>args[0,-1]</em> and send suggestions to <code>STDOUT</code> for any <code><a href=\"Tabular/Token.html\">Token</a></code> in <em>tokens</em> that starts with <em>args[-1]</em>.</p>","abstract":false,"args":[{"name":"tokens","external_name":"tokens","restriction":"Tokens"},{"name":"args","default_value":"ARGV","external_name":"args","restriction":""}],"args_string":"(tokens : Tokens, args = ARGV) : Bool","args_html":"(tokens : <a href=\"Tabular/Tokens.html\">Tokens</a>, args = <span class=\"t\">ARGV</span>) : Bool","location":{"filename":"src/tabular.cr","line_number":51,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L51"},"def":{"name":"reply","args":[{"name":"tokens","external_name":"tokens","restriction":"Tokens"},{"name":"args","default_value":"ARGV","external_name":"args","restriction":""}],"return_type":"Bool","visibility":"Public","body":"Tabular.reply(tokens, args) do |_| true end"},"external_var":false},{"html_id":"reply(tokens:Tokens,args=ARGV,&forward:Token->Bool):Bool-class-method","name":"reply","doc":"Verify the arguments in *args[0,-1]* and send suggestions to `STDOUT` for any `Token` in *tokens*\nthat starts with *args[-1]*.\n\nWhen a `Kind::Command` type is matched, hand control back to the CLI via the specifed *&forward*.","summary":"<p>Verify the arguments in <em>args[0,-1]</em> and send suggestions to <code>STDOUT</code> for any <code><a href=\"Tabular/Token.html\">Token</a></code> in <em>tokens</em> that starts with <em>args[-1]</em>.</p>","abstract":false,"args":[{"name":"tokens","external_name":"tokens","restriction":"Tokens"},{"name":"args","default_value":"ARGV","external_name":"args","restriction":""}],"args_string":"(tokens : Tokens, args = ARGV, &forward : Token -> Bool) : Bool","args_html":"(tokens : <a href=\"Tabular/Tokens.html\">Tokens</a>, args = <span class=\"t\">ARGV</span>, &forward : <a href=\"Tabular/Token.html\">Token</a> -> Bool) : Bool","location":{"filename":"src/tabular.cr","line_number":57,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L57"},"def":{"name":"reply","args":[{"name":"tokens","external_name":"tokens","restriction":"Tokens"},{"name":"args","default_value":"ARGV","external_name":"args","restriction":""}],"yields":1,"block_arity":1,"block_arg":{"name":"forward","external_name":"forward","restriction":"(Token -> Bool)"},"return_type":"Bool","visibility":"Public","body":"begin\n  if args.empty?\n    return true\n  end\n\n  current, accounted = traverse(tokens, args) do |runnable|\n    return yield(runnable)\n  end\n\n  delimit_override = find(tokens, args[0])\n  if delimit_override.kind.none?\n  else\n    current = delimit_override\n  end\n  if current.arguments?\n    tokens = current.arguments.to_set\n  end\n\n  Log::Debug.show(\"Current: #{current}\")\n\n  tokens.each do |token|\n    if accounted.includes?(token)\n      next\n    end\n\n    token.candidate(args[0]) do |reply|\n      Log.out(reply)\n    end\n  end\n\n  Log.out((directives(tokens)).show)\n\n  true\nrescue Tabular::Error::Match\n  false\nend"},"external_var":false},{"html_id":"tokens(from:Enumerable(*T),&block:*T->Token|Nil):Tokens-class-method","name":"tokens","doc":"Create a `Tokens` collection by transforming the elements of *from* with the provided *&block*.","summary":"<p>Create a <code><a href=\"Tabular/Tokens.html\">Tokens</a></code> collection by transforming the elements of <em>from</em> with the provided <em>&amp;block</em>.</p>","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"Enumerable(*T)"}],"args_string":"(from : Enumerable(*T), &block : *T -> Token | Nil) : Tokens","args_html":"(from : Enumerable(<span class=\"o\">*</span><span class=\"t\">T</span>), &block : <span class=\"o\">*</span><span class=\"t\">T</span> -> <a href=\"Tabular/Token.html\">Token</a> | Nil) : <a href=\"Tabular/Tokens.html\">Tokens</a>","location":{"filename":"src/tabular.cr","line_number":33,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L33"},"def":{"name":"tokens","args":[{"name":"from","external_name":"from","restriction":"Enumerable(*T)"}],"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(*T -> Token | ::Nil)"},"return_type":"Tokens","visibility":"Public","body":"from.to_a.map(&block).compact.to_set"},"external_var":false},{"html_id":"tokens(*tokens:Token):Tokens-class-method","name":"tokens","doc":"Create a `Tokens` collection.","summary":"<p>Create a <code><a href=\"Tabular/Tokens.html\">Tokens</a></code> collection.</p>","abstract":false,"args":[{"name":"tokens","external_name":"tokens","restriction":"Token"}],"args_string":"(*tokens : Token) : Tokens","args_html":"(*tokens : <a href=\"Tabular/Token.html\">Token</a>) : <a href=\"Tabular/Tokens.html\">Tokens</a>","location":{"filename":"src/tabular.cr","line_number":38,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular.cr#L38"},"def":{"name":"tokens","args":[{"name":"tokens","external_name":"tokens","restriction":"Token"}],"splat_index":0,"return_type":"Tokens","visibility":"Public","body":"tokens.to_set"},"external_var":false}],"types":[{"html_id":"tabular/Tabular/Completers","path":"Tabular/Completers.html","kind":"module","full_name":"Tabular::Completers","name":"Completers","abstract":false,"locations":[{"filename":"src/tabular/completers.cr","line_number":3,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/completers.cr#L3"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"A collection of convenience functions to handle completion situations.","summary":"<p>A collection of convenience functions to handle completion situations.</p>","class_methods":[{"html_id":"install(args=ARGV)-class-method","name":"install","doc":"A convenience completer for a CLI's completion installer command.\n```crystal\nif ARGV[0]? == \"__complete\"\n  ARGV.shift\n\n  if ARGV[0]? == \"completion\"\n    ARGV.shift\n\n    Tabular.install_complete\n  end\nend\n```","summary":"<p>A convenience completer for a CLI's completion installer command.</p>","abstract":false,"args":[{"name":"args","default_value":"ARGV","external_name":"args","restriction":""}],"args_string":"(args = ARGV)","args_html":"(args = <span class=\"t\">ARGV</span>)","location":{"filename":"src/tabular/completers.cr","line_number":16,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/completers.cr#L16"},"def":{"name":"install","args":[{"name":"args","default_value":"ARGV","external_name":"args","restriction":""}],"visibility":"Public","body":"tokens = Tabular.tokens(SHELLS) do |shell|\n  Tabular.command(shell.to_s, description: \"install completions for #{shell}\")\nend\ntokens.add(Tabular.option(\"--development\", [] of String, \"An alternate path to alias the CLI name to.\", Tabular.argument))\nreturn Tabular.reply(tokens, args)\n"},"external_var":false}]},{"html_id":"tabular/Tabular/Directive","path":"Tabular/Directive.html","kind":"enum","full_name":"Tabular::Directive","name":"Directive","abstract":false,"ancestors":[{"html_id":"tabular/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"tabular/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"tabular/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/enums.cr","line_number":5,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L5"}],"repository_name":"tabular","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"None","name":"None","value":"0","doc":"Indicates to let the shell perform its default behavior after completions have been provided.","summary":"<p>Indicates to let the shell perform its default behavior after completions have been provided.</p>"},{"id":"Error","name":"Error","value":"1","doc":"Indicates an error occurred and completions should be ignored.","summary":"<p>Indicates an error occurred and completions should be ignored.</p>"},{"id":"NoSpace","name":"NoSpace","value":"2","doc":"Indicates that the shell should not add a space after the completion even if there is a single completion provided.","summary":"<p>Indicates that the shell should not add a space after the completion even if there is a single completion provided.</p>"},{"id":"NoFile","name":"NoFile","value":"4","doc":"Indicates that the shell should not provide file completion even when no completion is provided.","summary":"<p>Indicates that the shell should not provide file completion even when no completion is provided.</p>"},{"id":"FilterExt","name":"FilterExt","value":"8","doc":"Indicates that the provided completions should be used as file extension filters.","summary":"<p>Indicates that the provided completions should be used as file extension filters.</p>"},{"id":"FilterDir","name":"FilterDir","value":"16","doc":"Indicates that only directory names should be provided in file completion.","summary":"<p>Indicates that only directory names should be provided in file completion.</p>"},{"id":"KeepOrder","name":"KeepOrder","value":"32","doc":"Indicates that the shell should preserve the order in which the completions are provided","summary":"<p>Indicates that the shell should preserve the order in which the completions are provided</p>"},{"id":"All","name":"All","value":"63"}],"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"A bit map representing the different behaviors the shell can be instructed\nto have once completions have been provided.","summary":"<p>A bit map representing the different behaviors the shell can be instructed to have once completions have been provided.</p>","instance_methods":[{"html_id":"error?-instance-method","name":"error?","doc":"Returns `true` if this enum value contains `Error`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#Error\">Error</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":9,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L9"},"def":{"name":"error?","visibility":"Public","body":"self.includes?(Error)"},"external_var":false},{"html_id":"filter_dir?-instance-method","name":"filter_dir?","doc":"Returns `true` if this enum value contains `FilterDir`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#FilterDir\">FilterDir</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":17,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L17"},"def":{"name":"filter_dir?","visibility":"Public","body":"self.includes?(FilterDir)"},"external_var":false},{"html_id":"filter_ext?-instance-method","name":"filter_ext?","doc":"Returns `true` if this enum value contains `FilterExt`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#FilterExt\">FilterExt</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":15,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L15"},"def":{"name":"filter_ext?","visibility":"Public","body":"self.includes?(FilterExt)"},"external_var":false},{"html_id":"keep_order?-instance-method","name":"keep_order?","doc":"Returns `true` if this enum value contains `KeepOrder`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#KeepOrder\">KeepOrder</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":19,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L19"},"def":{"name":"keep_order?","visibility":"Public","body":"self.includes?(KeepOrder)"},"external_var":false},{"html_id":"no_file?-instance-method","name":"no_file?","doc":"Returns `true` if this enum value contains `NoFile`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#NoFile\">NoFile</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":13,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L13"},"def":{"name":"no_file?","visibility":"Public","body":"self.includes?(NoFile)"},"external_var":false},{"html_id":"no_space?-instance-method","name":"no_space?","doc":"Returns `true` if this enum value contains `NoSpace`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#NoSpace\">NoSpace</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":11,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L11"},"def":{"name":"no_space?","visibility":"Public","body":"self.includes?(NoSpace)"},"external_var":false},{"html_id":"none?-instance-method","name":"none?","doc":"Returns `true` if this enum value contains `None`","summary":"<p>Returns <code>true</code> if this enum value contains <code><a href=\"../Tabular/Directive.html#None\">None</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":7,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L7"},"def":{"name":"none?","visibility":"Public","body":"self.includes?(None)"},"external_var":false},{"html_id":"show-instance-method","name":"show","doc":"Returns the `String` representation that will be sent to the shell.","summary":"<p>Returns the <code>String</code> representation that will be sent to the shell.</p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":22,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L22"},"def":{"name":"show","visibility":"Public","body":"\":#{value}\""},"external_var":false}]},{"html_id":"tabular/Tabular/Error","path":"Tabular/Error.html","kind":"module","full_name":"Tabular::Error","name":"Error","abstract":false,"locations":[{"filename":"src/tabular/exceptions.cr","line_number":3,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L3"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"A collection of exceptions specific to `Tabular`.","summary":"<p>A collection of exceptions specific to <code><a href=\"../Tabular.html\">Tabular</a></code>.</p>","types":[{"html_id":"tabular/Tabular/Error/Any","path":"Tabular/Error/Any.html","kind":"class","full_name":"Tabular::Error::Any","name":"Any","abstract":false,"superclass":{"html_id":"tabular/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"tabular/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"tabular/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/exceptions.cr","line_number":6,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L6"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"tabular/Tabular/Error/Argument","kind":"class","full_name":"Tabular::Error::Argument","name":"Argument"},{"html_id":"tabular/Tabular/Error/Install","kind":"class","full_name":"Tabular::Error::Install","name":"Install"},{"html_id":"tabular/Tabular/Error/Match","kind":"class","full_name":"Tabular::Error::Match","name":"Match"},{"html_id":"tabular/Tabular/Error/Support","kind":"class","full_name":"Tabular::Error::Support","name":"Support"}],"namespace":{"html_id":"tabular/Tabular/Error","kind":"module","full_name":"Tabular::Error","name":"Error"},"doc":"A base exception that all `Tabular::Error` exceptions\ncan be caught with.","summary":"<p>A base exception that all <code><a href=\"../../Tabular/Error.html\">Tabular::Error</a></code> exceptions can be caught with.</p>"},{"html_id":"tabular/Tabular/Error/Argument","path":"Tabular/Error/Argument.html","kind":"class","full_name":"Tabular::Error::Argument","name":"Argument","abstract":false,"superclass":{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},"ancestors":[{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},{"html_id":"tabular/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"tabular/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/exceptions.cr","line_number":12,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L12"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tabular/Tabular/Error","kind":"module","full_name":"Tabular::Error","name":"Error"},"doc":"Raised when method arguments are incorrect or missing.","summary":"<p>Raised when method arguments are incorrect or missing.</p>"},{"html_id":"tabular/Tabular/Error/Install","path":"Tabular/Error/Install.html","kind":"class","full_name":"Tabular::Error::Install","name":"Install","abstract":false,"superclass":{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},"ancestors":[{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},{"html_id":"tabular/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"tabular/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/exceptions.cr","line_number":15,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L15"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tabular/Tabular/Error","kind":"module","full_name":"Tabular::Error","name":"Error"},"doc":"Raised on issues with the installer.","summary":"<p>Raised on issues with the installer.</p>"},{"html_id":"tabular/Tabular/Error/Match","path":"Tabular/Error/Match.html","kind":"class","full_name":"Tabular::Error::Match","name":"Match","abstract":false,"superclass":{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},"ancestors":[{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},{"html_id":"tabular/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"tabular/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/exceptions.cr","line_number":9,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L9"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tabular/Tabular/Error","kind":"module","full_name":"Tabular::Error","name":"Error"},"doc":"Raised when an argument that must `Token` does not.","summary":"<p>Raised when an argument that must <code><a href=\"../../Tabular/Token.html\">Token</a></code> does not.</p>"},{"html_id":"tabular/Tabular/Error/Support","path":"Tabular/Error/Support.html","kind":"class","full_name":"Tabular::Error::Support","name":"Support","abstract":false,"superclass":{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},"ancestors":[{"html_id":"tabular/Tabular/Error/Any","kind":"class","full_name":"Tabular::Error::Any","name":"Any"},{"html_id":"tabular/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"tabular/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/exceptions.cr","line_number":18,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/exceptions.cr#L18"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tabular/Tabular/Error","kind":"module","full_name":"Tabular::Error","name":"Error"},"doc":"Raised when a configuration is unsupported.","summary":"<p>Raised when a configuration is unsupported.</p>"}]},{"html_id":"tabular/Tabular/Kind","path":"Tabular/Kind.html","kind":"enum","full_name":"Tabular::Kind","name":"Kind","abstract":false,"ancestors":[{"html_id":"tabular/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"tabular/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"tabular/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/enums.cr","line_number":31,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L31"}],"repository_name":"tabular","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Option","name":"Option","value":"1","doc":"Specifies that a `Token` represents an option parameter.","summary":"<p>Specifies that a <code><a href=\"../Tabular/Token.html\">Token</a></code> represents an option parameter.</p>"},{"id":"Argument","name":"Argument","value":"2","doc":"Specifies that a `Token` represents an argument parameter.","summary":"<p>Specifies that a <code><a href=\"../Tabular/Token.html\">Token</a></code> represents an argument parameter.</p>"},{"id":"Command","name":"Command","value":"3","doc":"Specifies that a `Token` represents an subcommand parameter.","summary":"<p>Specifies that a <code><a href=\"../Tabular/Token.html\">Token</a></code> represents an subcommand parameter.</p>"}],"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"Specifiers that determine the functionality of a `Token`.","summary":"<p>Specifiers that determine the functionality of a <code><a href=\"../Tabular/Token.html\">Token</a></code>.</p>","instance_methods":[{"html_id":"argument?-instance-method","name":"argument?","doc":"Returns `true` if this enum value equals `Argument`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Kind.html#Argument\">Argument</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":37,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L37"},"def":{"name":"argument?","visibility":"Public","body":"self == Argument"},"external_var":false},{"html_id":"command?-instance-method","name":"command?","doc":"Returns `true` if this enum value equals `Command`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Kind.html#Command\">Command</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":39,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L39"},"def":{"name":"command?","visibility":"Public","body":"self == Command"},"external_var":false},{"html_id":"directives-instance-method","name":"directives","doc":"Returns the default `Directive` of the `Kind`.\n\n* `Kind::Argument` — `Directive::None`\n* All others — `Directive::NoFile`","summary":"<p>Returns the default <code><a href=\"../Tabular/Directive.html\">Directive</a></code> of the <code><a href=\"../Tabular/Kind.html\">Kind</a></code>.</p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":51,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L51"},"def":{"name":"directives","visibility":"Public","body":"case self\nwhen Kind::Argument\n  Directive.from_value(0)\nelse\n  Directive::NoFile\nend"},"external_var":false},{"html_id":"option?-instance-method","name":"option?","doc":"Returns `true` if this enum value equals `Option`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Kind.html#Option\">Option</a></code></p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":35,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L35"},"def":{"name":"option?","visibility":"Public","body":"self == Option"},"external_var":false},{"html_id":"runnable?-instance-method","name":"runnable?","doc":"Returns `true` if the `Token` represented by the `Kind` should hand control back to\nthe CLI when matched. Only `Kind::Command` is runnable.","summary":"<p>Returns <code>true</code> if the <code><a href=\"../Tabular/Token.html\">Token</a></code> represented by the <code><a href=\"../Tabular/Kind.html\">Kind</a></code> should hand control back to the CLI when matched.</p>","abstract":false,"location":{"filename":"src/tabular/enums.cr","line_number":43,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/enums.cr#L43"},"def":{"name":"runnable?","visibility":"Public","body":"self.command?"},"external_var":false}]},{"html_id":"tabular/Tabular/Log","path":"Tabular/Log.html","kind":"enum","full_name":"Tabular::Log","name":"Log","abstract":false,"ancestors":[{"html_id":"tabular/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"tabular/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"tabular/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/log.cr","line_number":7,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L7"}],"repository_name":"tabular","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Fatal","name":"Fatal","value":"1","doc":"A serious error, indicating that the program itself may be unable to continue running.","summary":"<p>A serious error, indicating that the program itself may be unable to continue running.</p>"},{"id":"Error","name":"Error","value":"2","doc":"Due to a more serious problem, the software has not been able to perform some function.","summary":"<p>Due to a more serious problem, the software has not been able to perform some function.</p>"},{"id":"Warn","name":"Warn","value":"3","doc":"An indication that something unexpected happened, or that a problem might occur in the near future.","summary":"<p>An indication that something unexpected happened, or that a problem might occur in the near future.</p>"},{"id":"Info","name":"Info","value":"4","doc":"Confirmation that things are working as expected.","summary":"<p>Confirmation that things are working as expected.</p>"},{"id":"Debug","name":"Debug","value":"5","doc":"Detailed information, typically only of interest to a developer trying to diagnose a problem.","summary":"<p>Detailed information, typically only of interest to a developer trying to diagnose a problem.</p>"}],"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"A logger in which each member represents a logging level. Setting the\n`$TABULAR_LOG_LEVEL` environment variable from the shell to a file path\ndirects all logging to that file.","summary":"<p>A logger in which each member represents a logging level.</p>","class_methods":[{"html_id":"level=(value:UInt32)-class-method","name":"level=","doc":"Set the global logging level.","summary":"<p>Set the global logging level.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"UInt32"}],"args_string":"(value : UInt32)","args_html":"(value : UInt32)","location":{"filename":"src/tabular/log.cr","line_number":31,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L31"},"def":{"name":"level=","args":[{"name":"value","external_name":"value","restriction":"UInt32"}],"visibility":"Public","body":"@@level = (self.from_value(value)).value"},"external_var":false},{"html_id":"out(*msg)-class-method","name":"out","doc":"Send output to `STDOUT`.","summary":"<p>Send output to <code>STDOUT</code>.</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":""}],"args_string":"(*msg)","args_html":"(*msg)","location":{"filename":"src/tabular/log.cr","line_number":41,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L41"},"def":{"name":"out","args":[{"name":"msg","external_name":"msg","restriction":""}],"splat_index":0,"visibility":"Public","body":"@@out.puts(*msg)"},"external_var":false},{"html_id":"silence-class-method","name":"silence","doc":"Silence all output, for testing.","summary":"<p>Silence all output, for testing.</p>","abstract":false,"location":{"filename":"src/tabular/log.cr","line_number":36,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L36"},"def":{"name":"silence","visibility":"Public","body":"@@out = @@err = null"},"external_var":false}],"instance_methods":[{"html_id":"debug?-instance-method","name":"debug?","doc":"Returns `true` if this enum value equals `Debug`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Log.html#Debug\">Debug</a></code></p>","abstract":false,"location":{"filename":"src/tabular/log.cr","line_number":17,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L17"},"def":{"name":"debug?","visibility":"Public","body":"self == Debug"},"external_var":false},{"html_id":"error?-instance-method","name":"error?","doc":"Returns `true` if this enum value equals `Error`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Log.html#Error\">Error</a></code></p>","abstract":false,"location":{"filename":"src/tabular/log.cr","line_number":11,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L11"},"def":{"name":"error?","visibility":"Public","body":"self == Error"},"external_var":false},{"html_id":"fatal?-instance-method","name":"fatal?","doc":"Returns `true` if this enum value equals `Fatal`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Log.html#Fatal\">Fatal</a></code></p>","abstract":false,"location":{"filename":"src/tabular/log.cr","line_number":9,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L9"},"def":{"name":"fatal?","visibility":"Public","body":"self == Fatal"},"external_var":false},{"html_id":"info?-instance-method","name":"info?","doc":"Returns `true` if this enum value equals `Info`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Log.html#Info\">Info</a></code></p>","abstract":false,"location":{"filename":"src/tabular/log.cr","line_number":15,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L15"},"def":{"name":"info?","visibility":"Public","body":"self == Info"},"external_var":false},{"html_id":"send(msg)-instance-method","name":"send","doc":"Send `journald` output to `$TABULAR_LOG_FILE` (_defaults to `File::NULL`_).","summary":"<p>Send <code>journald</code> output to <code>$TABULAR_LOG_FILE</code> (<em>defaults to <code>File::NULL</code></em>).</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":""}],"args_string":"(msg)","args_html":"(msg)","location":{"filename":"src/tabular/log.cr","line_number":60,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L60"},"def":{"name":"send","args":[{"name":"msg","external_name":"msg","restriction":""}],"visibility":"Public","body":"if should?\nelse\n  return\nend\n\n@@err.puts(\"<%d> %s\" % [value, msg])\n"},"external_var":false},{"html_id":"show(*msg)-instance-method","name":"show","doc":"Send pretty output to `$TABULAR_LOG_FILE` (_defaults to `File::NULL`_).","summary":"<p>Send pretty output to <code>$TABULAR_LOG_FILE</code> (<em>defaults to <code>File::NULL</code></em>).</p>","abstract":false,"args":[{"name":"msg","external_name":"msg","restriction":""}],"args_string":"(*msg)","args_html":"(*msg)","location":{"filename":"src/tabular/log.cr","line_number":46,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L46"},"def":{"name":"show","args":[{"name":"msg","external_name":"msg","restriction":""}],"splat_index":0,"visibility":"Public","body":"if should?\nelse\n  return\nend\nif msg.empty?\n  return\nend\n\ntext = msg.map(&.to_s).join(\"\")\nif text.empty?\n  return\nend\n\nlines = text.lines\n@@err.puts(template % [prefix, lines.shift])\nlines.each do |l| @@err.puts(template % [\"\", l]) end\n@@err.flush\n"},"external_var":false},{"html_id":"warn?-instance-method","name":"warn?","doc":"Returns `true` if this enum value equals `Warn`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Tabular/Log.html#Warn\">Warn</a></code></p>","abstract":false,"location":{"filename":"src/tabular/log.cr","line_number":13,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/log.cr#L13"},"def":{"name":"warn?","visibility":"Public","body":"self == Warn"},"external_var":false}]},{"html_id":"tabular/Tabular/Token","path":"Tabular/Token.html","kind":"struct","full_name":"Tabular::Token","name":"Token","abstract":false,"superclass":{"html_id":"tabular/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tabular/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tabular/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tabular/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tabular/token.cr","line_number":22,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L22"}],"repository_name":"tabular","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"NONE","name":"NONE","value":"Token.new(:none)","doc":"Basically, `Token?` minus the baggage.","summary":"<p>Basically, <code><a href=\"../Tabular/Token.html\">Token</a>?</code> minus the baggage.</p>"}],"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"Represents a parameter whose name and aliases may be suggested and amtched during tab completion.","summary":"<p>Represents a parameter whose name and aliases may be suggested and amtched during tab completion.</p>","constructors":[{"html_id":"new(kind:Kind,name:String=\"\",aliases=[]ofString,description=\"\",*argument,directives:Directable|Nil=nil,delimiters=Tabular.delimiters)-class-method","name":"new","doc":"Create a new `Token`.\n\n- *kind*: See `Token#kind`.\n- *name*: See `Token#name`.\n- *aliases*: See `Token#aliases`.\n- *description*: See `Token#description`.\n- *argument*: See `Token#arguments`.\n- *directives*: See `Token#directives`.\n- *delimiters*: Ad hoc delimiters that will override `Tabular.delimiters`.","summary":"<p>Create a new <code><a href=\"../Tabular/Token.html\">Token</a></code>.</p>","abstract":false,"args":[{"name":"kind","external_name":"kind","restriction":"Kind"},{"name":"name","default_value":"\"\"","external_name":"name","restriction":"String"},{"name":"aliases","default_value":"[] of String","external_name":"aliases","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""},{"name":"argument","external_name":"argument","restriction":""},{"name":"directives","default_value":"nil","external_name":"directives","restriction":"Directable | ::Nil"},{"name":"delimiters","default_value":"Tabular.delimiters","external_name":"delimiters","restriction":""}],"args_string":"(kind : Kind, name : String = \"\", aliases = [] of String, description = \"\", *argument, directives : Directable | Nil = nil, delimiters = Tabular.delimiters)","args_html":"(kind : <a href=\"../Tabular/Kind.html\">Kind</a>, name : String = <span class=\"s\">&quot;&quot;</span>, aliases = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, description = <span class=\"s\">&quot;&quot;</span>, *argument, directives : Directable | Nil = <span class=\"n\">nil</span>, delimiters = <span class=\"t\">Tabular</span>.delimiters)","location":{"filename":"src/tabular/token.cr","line_number":54,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L54"},"def":{"name":"new","args":[{"name":"kind","external_name":"kind","restriction":"Kind"},{"name":"name","default_value":"\"\"","external_name":"name","restriction":"String"},{"name":"aliases","default_value":"[] of String","external_name":"aliases","restriction":""},{"name":"description","default_value":"\"\"","external_name":"description","restriction":""},{"name":"argument","external_name":"argument","restriction":""},{"name":"directives","default_value":"nil","external_name":"directives","restriction":"Directable | ::Nil"},{"name":"delimiters","default_value":"Tabular.delimiters","external_name":"delimiters","restriction":""}],"splat_index":4,"visibility":"Public","body":"_ = allocate\n_.initialize(kind, name, aliases, description, *argument, directives: directives, delimiters: delimiters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"aliases:Set(String)-instance-method","name":"aliases","doc":"A list of additional names the `Token` will suggest/match.","summary":"<p>A list of additional names the <code><a href=\"../Tabular/Token.html\">Token</a></code> will suggest/match.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":37,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L37"},"def":{"name":"aliases","visibility":"Public","body":"@aliases"},"external_var":false},{"html_id":"arguments:Array(Tabular::Token)-instance-method","name":"arguments","doc":"A set of `Kind::Argument` types required by a `Kind::Option` type.","summary":"<p>A set of <code><a href=\"../Tabular/Kind.html#Argument\">Kind::Argument</a></code> types required by a <code><a href=\"../Tabular/Kind.html#Option\">Kind::Option</a></code> type.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":41,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L41"},"def":{"name":"arguments","visibility":"Public","body":"@arguments"},"external_var":false},{"html_id":"arguments?-instance-method","name":"arguments?","doc":"Return `true` if a `Kind::Option` requires any arguments.","summary":"<p>Return <code>true</code> if a <code><a href=\"../Tabular/Kind.html#Option\">Kind::Option</a></code> requires any arguments.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":96,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L96"},"def":{"name":"arguments?","visibility":"Public","body":"@has_arguments || (@has_arguments = !@iter_arguments.empty?)"},"external_var":false},{"html_id":"candidate(arg:String,&:String->)-instance-method","name":"candidate","doc":"Yield suggestions for any names that contain *arg*.","summary":"<p>Yield suggestions for any names that contain <em>arg</em>.</p>","abstract":false,"args":[{"name":"arg","external_name":"arg","restriction":"String"}],"args_string":"(arg : String, & : String -> )","args_html":"(arg : String, & : String -> )","location":{"filename":"src/tabular/token.cr","line_number":69,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L69"},"def":{"name":"candidate","args":[{"name":"arg","external_name":"arg","restriction":"String"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(String ->)"},"visibility":"Public","body":"if skip?(arg)\n  return\nend\n\n@aliases.each do |a|\n  if passthru? || (a.starts_with?(arg))\n  else\n    next\n  end\n\n  yield show(a)\nend\n"},"external_var":false},{"html_id":"description:String-instance-method","name":"description","doc":"The description of the parameter the `Token` represents.","summary":"<p>The description of the parameter the <code><a href=\"../Tabular/Token.html\">Token</a></code> represents.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":39,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L39"},"def":{"name":"description","visibility":"Public","body":"@description"},"external_var":false},{"html_id":"directives:Tabular::Directive-instance-method","name":"directives","doc":"Additional directives the `Token` will send to the shell if suggested.","summary":"<p>Additional directives the <code><a href=\"../Tabular/Token.html\">Token</a></code> will send to the shell if suggested.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":43,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L43"},"def":{"name":"directives","visibility":"Public","body":"@directives"},"external_var":false},{"html_id":"kind:Tabular::Kind-instance-method","name":"kind","doc":"The representation of the `Token`.","summary":"<p>The representation of the <code><a href=\"../Tabular/Token.html\">Token</a></code>.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":33,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L33"},"def":{"name":"kind","visibility":"Public","body":"@kind"},"external_var":false},{"html_id":"match!(arg:String)-instance-method","name":"match!","doc":"Returns `self` if *arg* is an exact match of any names. Otherwise, raise `Error::Match`.","summary":"<p>Returns <code>self</code> if <em>arg</em> is an exact match of any names.</p>","abstract":false,"args":[{"name":"arg","external_name":"arg","restriction":"String"}],"args_string":"(arg : String)","args_html":"(arg : String)","location":{"filename":"src/tabular/token.cr","line_number":80,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L80"},"def":{"name":"match!","args":[{"name":"arg","external_name":"arg","restriction":"String"}],"visibility":"Public","body":"if match?(arg)\nelse\n  raise(Error::Match.new(\"No match for '#{arg}'\"))\nend\n\nself\n"},"external_var":false},{"html_id":"match?(arg:String):Bool-instance-method","name":"match?","doc":"Return `true` if *arg* is an exact match of any names.","summary":"<p>Return <code>true</code> if <em>arg</em> is an exact match of any names.</p>","abstract":false,"args":[{"name":"arg","external_name":"arg","restriction":"String"}],"args_string":"(arg : String) : Bool","args_html":"(arg : String) : Bool","location":{"filename":"src/tabular/token.cr","line_number":87,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L87"},"def":{"name":"match?","args":[{"name":"arg","external_name":"arg","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"if passthru? || @aliases.empty?\n  return true\nend\n\n@aliases.find_value(false) do |a|\n  (delimited?(arg, a)) || (a == arg)\nend\n"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","doc":"The name of the parameter the `Token` represents.","summary":"<p>The name of the parameter the <code><a href=\"../Tabular/Token.html\">Token</a></code> represents.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":35,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L35"},"def":{"name":"name","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"next(&)-instance-method","name":"next","doc":"For `Kind::Option` token with `arguments?`, yield the next\n`Kind::Argument` token to the specified `&block`.","summary":"<p>For <code><a href=\"../Tabular/Kind.html#Option\">Kind::Option</a></code> token with <code><a href=\"../Tabular/Token.html#arguments%3F-instance-method\">#arguments?</a></code>, yield the next <code><a href=\"../Tabular/Kind.html#Argument\">Kind::Argument</a></code> token to the specified <code>&amp;block</code>.</p>","abstract":false,"location":{"filename":"src/tabular/token.cr","line_number":102,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L102"},"def":{"name":"next","yields":1,"block_arity":1,"visibility":"Public","body":"if arguments?\n  yield @iter_arguments.shift\nend"},"external_var":false},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/tabular/token.cr","line_number":106,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L106"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << show"},"external_var":false}]},{"html_id":"tabular/Tabular/Tokens","path":"Tabular/Tokens.html","kind":"alias","full_name":"Tabular::Tokens","name":"Tokens","abstract":false,"locations":[{"filename":"src/tabular/token.cr","line_number":138,"url":"https://github.com/LeShaunJ/tabular/blob/4c819fd/src/tabular/token.cr#L138"}],"repository_name":"tabular","program":false,"enum":false,"alias":true,"aliased":"Set(Tabular::Token)","aliased_html":"Set(<a href=\"../Tabular/Token.html\">Tabular::Token</a>)","const":false,"namespace":{"html_id":"tabular/Tabular","kind":"module","full_name":"Tabular(T)","name":"Tabular"},"doc":"A collection of `Token` instances.","summary":"<p>A collection of <code>Token</code> instances.</p>"}]}]}})